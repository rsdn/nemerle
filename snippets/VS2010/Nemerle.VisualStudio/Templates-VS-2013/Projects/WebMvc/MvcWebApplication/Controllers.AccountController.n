using System;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;
using System.Linq;
using System.Security.Principal;
using System.Web;
using System.Web.Mvc;
using System.Web.Routing;
using System.Web.Security;
using $safeprojectname$.Models;

namespace $safeprojectname$.Controllers
{

	[HandleError]
	public class AccountController : Controller
	{

		public FormsService : IFormsAuthenticationService { get; set; }
		public MembershipService : IMembershipService { get; set; }

		protected override Initialize(requestContext : RequestContext) : void
		{
			when (FormsService == null) { FormsService = FormsAuthenticationService(); }
			when (MembershipService == null) { MembershipService = AccountMembershipService(); }

			base.Initialize(requestContext);
		}

		// **************************************
		// URL: /Account/LogOn
		// **************************************

		public LogOn() : ActionResult
		{
			View();
		}

		[HttpPost]
		public LogOn(model : LogOnModel, returnUrl : string) : ActionResult
		{
			if (ModelState.IsValid)
			{
				if (MembershipService.ValidateUser(model.UserName, model.Password))
				{
					FormsService.SignIn(model.UserName, model.RememberMe);
					if (!String.IsNullOrEmpty(returnUrl))
					{
						Redirect(returnUrl);
					}
					else
					{
						RedirectToAction("Index", "Home");
					}
				}
				else
				{
					ModelState.AddModelError("", "The user name or password provided is incorrect.");
					View(model);
				}
			}
			else
			{
			  // If we got this far, something failed, redisplay form
			  View(model);
			}
		}

		// **************************************
		// URL: /Account/LogOff
		// **************************************

		public LogOff() : ActionResult
		{
			FormsService.SignOut();

			RedirectToAction("Index", "Home");
		}

		// **************************************
		// URL: /Account/Register
		// **************************************

		public Register() : ActionResult
		{
			ViewData["PasswordLength"] = MembershipService.MinPasswordLength;
			View();
		}

		[HttpPost]
		public Register(model : RegisterModel) : ActionResult
		{
			if (ModelState.IsValid)
			{
				// Attempt to register the user
				def createStatus = MembershipService.CreateUser(model.UserName, model.Password, model.Email);

				if (createStatus == MembershipCreateStatus.Success)
				{
					FormsService.SignIn(model.UserName, false /* createPersistentCookie */);
					RedirectToAction("Index", "Home");
				}
				else
				{
					ModelState.AddModelError("", AccountValidation.ErrorCodeToString(createStatus));

			    // If we got this far, something failed, redisplay form
			    ViewData["PasswordLength"] = MembershipService.MinPasswordLength;
			    View(model);
				}
			}
			else
			{
			  // If we got this far, something failed, redisplay form
			  ViewData["PasswordLength"] = MembershipService.MinPasswordLength;
			  View(model);
		  }
		}

		// **************************************
		// URL: /Account/ChangePassword
		// **************************************

		[Authorize]
		public ChangePassword() : ActionResult
		{
			ViewData["PasswordLength"] = MembershipService.MinPasswordLength;
			View();
		}

		[Authorize]
		[HttpPost]
		public ChangePassword(model : ChangePasswordModel) : ActionResult
		{
			if (ModelState.IsValid)
			{
				if (MembershipService.ChangePassword(User.Identity.Name, model.OldPassword, model.NewPassword))
				{
					RedirectToAction("ChangePasswordSuccess");
				}
				else
				{
					ModelState.AddModelError("", "The current password is incorrect or the new password is invalid.");

					// If we got this far, something failed, redisplay form
			    ViewData["PasswordLength"] = MembershipService.MinPasswordLength;
			    View(model);
				}
			}
      else
      {
			  // If we got this far, something failed, redisplay form
			  ViewData["PasswordLength"] = MembershipService.MinPasswordLength;
			  View(model);
		  }
		}

		// **************************************
		// URL: /Account/ChangePasswordSuccess
		// **************************************

		public ChangePasswordSuccess() : ActionResult
		{
			View();
		}
	}
}
