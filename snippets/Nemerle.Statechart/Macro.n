using System;
using System.Diagnostics;
using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Compiler.Parsetree;
using Nemerle.Compiler;

namespace Nemerle.Statechart
{
  [MacroUsage(MacroPhase.BeforeInheritance, MacroTargets.Class)]
  macro statechart(ty : TypeBuilder, body : PExpr)    
  {      
     FsmHelper.ParseAndGenerate(ty, body);
  }      
  
  [MacroUsage(MacroPhase.BeforeTypedMembers, MacroTargets.Method)]
  macro ActionFor(_ : TypeBuilder, _ : ParsedMethod, body)
  {
    _ = body
  }

  [MacroUsage(MacroPhase.BeforeTypedMembers, MacroTargets.Property)]
  macro GuardFor(_ : TypeBuilder, _ : ParsedProperty, body)
  {
    _ = body
  }

  [MacroUsage(MacroPhase.BeforeTypedMembers, MacroTargets.Method)]
  macro GuardFor(_ : TypeBuilder, _ : ParsedMethod, body)
  {
    _ = body
  }

  [MacroUsage(MacroPhase.BeforeTypedMembers, MacroTargets.Field)]
  macro GuardFor(_ : TypeBuilder, _ : ParsedField, body)
  {
    _ = body
  }
  
  [MacroUsage(MacroPhase.BeforeTypedMembers, MacroTargets.Method)]
  macro EventFor(_ : TypeBuilder, _ : ParsedMethod, body)
  {
    _ = body
  }

  [MacroUsage(MacroPhase.BeforeTypedMembers, MacroTargets.Method)]
  macro Constructor(_ : TypeBuilder, _ : ParsedMethod)
  {
    
  }
}
