#pragma implicit

using System.Console
using Nemerle.Utility

variant Color
{
  | Red
  | Yellow
  | Green
  | Rgb    { 
	red : byte
	green : byte
	blue : byte 
  }
  | Alpha  { color : Color; alpha : byte; }
  
  public ToRgb() : byte * byte * byte
  {
    match (this)
    {
      | Red          => (255b, 0b,   0b)
      | Green        => (0b,   255b, 0b)
      | Yellow       => (255b, 255b, 0b)
      | Rgb(r, g, b) => (r, g, b)
      | Alpha(x, _)  => x.ToRgb()
    }
  }
}

module FooBar {

	[Accessor]
	static number :
		int = 7
	
	static toggle :
		bool = true

	public static Main () : void {
		WriteLine("Hello World!")
		WriteLine(
		  MultilineMatchTest ("ab")
		)
		WriteLine (MultilineMatchTest 
		  ( "Hello World")
		)
		WriteLine
		(
			MultilineMatchTest
			(
				GenerateValue (true)
			)
		)
		MultilineIfElseTest(15)
		WriteLine()
		MoreSyntaxTests()
	}

	static Foo (x: int) : void
	{
		if (x == 3) {
			def y = x * 42
			Foo (x)
		} else if (x == 7) {
			[x].Map (fun (x) 
			{
				x 
				* 
				2
			})
		} else
		  Foo (13)
	}
	
	static Bar () : int
	{
		def foo = 2 + 
		  7 * 13
		foo
	}
	
	static GenerateValue (mkVal: bool = true) : string {
		when (mkVal)
		  "a"
		  
		null
	}
	
	static MultilineIfElseTest (switch: int) : void {
		if (switch == 0)
		  WriteLine("0")
		else if (switch % 2 == 0)
		  WriteLine("Divisible by 2")
		else if (switch % 3 == 0)
		  WriteLine("Divisible by 3")
		else
		  WriteLine($"Number is: $switch")
	}
	
	static MultilineMatchTest (input: string) : string {
	  | "a" =>
	    def tmp = input + "bc!"
		tmp
	  | "ab" =>
	    def tmp2 = input + "c!"
		tmp2
	  | "abc" =>
	    def tmp3 = input + "!"
		tmp3
	  | _ =>
		def first = "abc"
		def second = "!"
		def combined = first +
			second
		combined
	}

	static MoreSyntaxTests () : void 
	{
      Write("Hello")

      def n = 1
      when (n > 0)
        Write(", World")				
      WriteLine("!")


      if (n > 0) {
        WriteLine("n > 0")
		when (n > 1)
          WriteLine("n > 1")
      } else
        WriteLine("Zero")

      def a = 1
      def b = 2
      def c = (
                a +
                b
              )
      def d = a +
              c
      _ = 
	  match ("foo") 
	  {
        | "bar" => {}
        | "foo" => {}
        | _ => {}
	  }
      _ = match ("foo") {
        | "bar" => "bar"
        | "foo" => 
          "qux"
        | _ =>
          "fix"  }		  
      WriteLine($"c = $c, d = $d")
      WriteLine(toggle)
	}
}
