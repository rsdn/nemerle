// REFERENCE: Nemerle.Async.dll
// REFERENCE: Nemerle.Async.Macros.dll

using Nemerle.Async;
using System.Threading;
using System.Threading.Tasks;

namespace Nemerle.Async.Tests
{
  public class AsyncCompile
  {
    public P1Async(a : int, b : int) : Task[int]
    {
      Task.Factory.StartNew(() =>
      {
        mutable k = 0;
        for (mutable i = 0; i < 10000; i++)
          for (mutable j = 0; j < 10000; j++)
          {
            unchecked
            {
              k = k + a + b;
            }
          }
        k;
      });
    }
    
    public AsyncConstructions() : void
    {
      // type of expression: Task
      // warning should appear that async block lacks 'await' operators
      def _ : Task = async // W: This async block lacks 'await' operators and will run synchronously.
      {
        System.Diagnostics.Debug.WriteLine("It makes no sense.");
      }

      // type of expression: Task
      // warning should appear that async block lacks 'await' operators
      def _ : Task = async // W: This async block lacks 'await' operators and will run synchronously.
      {
        42;
      }
      
      // type of expression: Task[int]
      // here we are ignoring return value from P1Async method
      // warning should appear
      def _ : Task[int] = async // W: N10005: ignored computed value of type int
      {
        await P1Async(1, 12);
        42;
      }
    }
  }
}
