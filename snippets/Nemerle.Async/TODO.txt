TODO:


for v1.0:
---------

- handle block statement (and maybe continue / break / return keywords
  from Nemerle.Imperative namespace)


for v2.0:
---------

- generation of state machine code (more effective code, particulary try / catch / finally)

- remove runtime dependency of "Async" library - use AsyncTaskMethodBuilder from System.Runtime.CompilerServices instead

- optimizations, e.g:
	- optimize Awaiter usage - check IsCompleted before calling OnCompleted

	- optimize tail await: "await _;" to just return "_" from async block
	  (something like returncomp but automatically)

- complete implementation of scenarios using await like:
  Call(await FuncAsync())

- tweaking code so decompilers (like ILSpy) can recognize async/await pattern
