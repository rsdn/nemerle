using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Console;
using System.Linq;

public interface ISome
{
    Method():void;
}

public static class Base
{
    public static Work():void
    {
        this.DoWork();
    }
    
    protected virtual static DoWork(): void
    {
        WriteLine("Base.DoWork");
    }
}

public module Derived: Base, ISome
{
    protected override DoWork(): void
    {
        WriteLine("Derived.DoWork");
    }
    
    public static Method():void {}
}

public class DerivedFromExternalClass: TestLib.ExternalClass
{
    protected override static P:string { get { typeof(DerivedFromExternalClass).ToString() } }
}

module Program
{
  Main() : void
  {
    Derived.Work();
    WriteLine(DerivedFromExternalClass.F());
    _ = ReadLine();
  }
}