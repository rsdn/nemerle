using Nemerle.Compiler;
using Nemerle.Utility;
using Nemerle.Assertions;

using PExpr = Nemerle.Compiler.Parsetree.PExpr;

namespace Nemerle.Compiler.Typedtree
{
  public type Parm = Param;
  
  [Record]
  public class Param
  {
    public kind : ParamKind;
    public mutable expr : TExpr;
    public name : string;  // "" if no name given
    [RecordIgnore] public IsByDefault : bool; // if parameter passed as default value
    public mutable required_type : TypeVar;
    [RecordIgnore]
    public NameToComplete : string { get; set; }

    public this(expr : TExpr, is_default : bool)
    {
      this(expr);
      IsByDefault = is_default;
    }
    
    public this(expr : TExpr)
    {
      kind = ParamKind.Normal;
      this.expr = expr;
      name = "";
    }

    override public ToString() : string
    {
      $<#$(if (name == "") "" else name + "=") $expr#>
    }
  }
} // namespace
