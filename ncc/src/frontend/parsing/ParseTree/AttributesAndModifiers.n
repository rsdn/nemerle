using System.Diagnostics;
using System.Globalization;
using System.Math;
using Nemerle.Assertions;
using Nemerle.Collections;
using Nemerle.Utility;

namespace Nemerle.Compiler
{
  public type Modifiers = AttributesAndModifiers;
  
  public partial class AttributesAndModifiers : Located
  {
    public CustomAttributesLocation : Location              { get; internal        set; }
    public Modifiers                : NemerleModifiers      { get { mods }         set { mods = value; } }
    public CustomAttributes         : list[Parsetree.PExpr] { get { custom_attrs } set { custom_attrs = value; } }
    
    public mutable mods : NemerleModifiers;
    public mutable custom_attrs : list[Parsetree.PExpr];
    internal mutable macro_attrs : list [string * Parsetree.PExpr];
    /// This property contains only custom attributes which parsed from sources. Macros can't modify it.
    public ParsedCustomAttributes : list [Parsetree.PExpr]
    {
      mutable parsed_custom_attrs : list [Parsetree.PExpr] = [];
      get          { parsed_custom_attrs }
      internal set { parsed_custom_attrs = value ?? [] };
    }
    /// This property contains only modifiers which parsed from sources. Macros can't modify it.
    public ParsedModifiers        : NemerleModifiers      { get; }

    public IsEmpty : bool { get { custom_attrs.IsEmpty && macro_attrs.IsEmpty } }

    public this(mods : NemerleModifiers, custom_attrs : list [Parsetree.PExpr])
    {
      ParsedModifiers = mods;
      this.mods = mods;
      this.custom_attrs = custom_attrs;
      this.macro_attrs = [];
    }

    public this() { this(NemerleModifiers.None, []) }

    /// For Clone()
    private this(other : AttributesAndModifiers)
    {
      CustomAttributesLocation  = other.CustomAttributesLocation;
      mods                      = other.mods;
      custom_attrs              = other.custom_attrs;
      macro_attrs               = other.macro_attrs;
      ParsedCustomAttributes    = other.ParsedCustomAttributes;
      ParsedModifiers           = other.ParsedModifiers;
    }

    public Clone() : AttributesAndModifiers{ AttributesAndModifiers(this) }

    public override Location : Location { get { CustomAttributesLocation } }

    public Attributes : NemerleModifiers { get { mods } }

    public GetCustomAttributes () : list [Parsetree.PExpr]
    {
      custom_attrs
    }
    
    public GetMacroAttributes () : list [Parsetree.PExpr]
    {
      macro_attrs.Map (Pair.Second)
    }
    
    public AddCustomAttribute (expr : Parsetree.PExpr) : void
    {
      custom_attrs ::= expr;
    }

    override public ToString() : string
    {
      $"$custom_attrs $mods"
    }
  }
} // Nemerle.Compiler
