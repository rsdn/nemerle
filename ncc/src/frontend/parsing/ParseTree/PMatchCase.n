using Nemerle.Compiler;
using Nemerle.Collections;
using Nemerle.Utility;

using System.Diagnostics;

namespace Nemerle.Compiler.Parsetree
{
  public type MatchCase = PMatchCase;
  
  [Record]
  public class PMatchCase : ParsedBase
  {
    public this(patterns : list [PExpr], body : PExpr)
    {
      this(patterns, body, false)
    }

    public this(patterns : list [PExpr], body : PExpr, patternsLocation : Location, arrowLocation : Location)
    {
      this(patterns, body, false);
      _patternsLocation = patternsLocation;
      _arrowLocation    = arrowLocation;
    }

    public patterns : list [PExpr];
    public body : PExpr;
    public mutable disable_warnings : bool;

    [RecordIgnore, Accessor] mutable _patternsLocation : Location;
    [RecordIgnore, Accessor] mutable _arrowLocation    : Location;
    public BodyLocation     : Location { get { body.Location } }

    public override Location : Location
    {
      get
      {
        mutable loc = body.Location;

        patterns.Iter(p => loc = loc.Combine(p.Location));

        loc;
      }
    }

    public override ToString() : string
    {
      $"| $(patterns.ToString(\" | \")) => $body"
    }
  }
} // namespace
