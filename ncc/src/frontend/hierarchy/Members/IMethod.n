using System;
using Nemerle.Compiler;
using Nemerle.Compiler.SolverMacros;
using Nemerle.Compiler.Typedtree;
using Nemerle.Imperative;

using Nemerle.Collections;
using Nemerle.Utility;

namespace Nemerle.Compiler
{
  public interface IMethod : IMember
  {
    IsVarArgs   : bool              { get; }
    IsFinal     : bool              { get; }
    IsAbstract  : bool              { get; }
    IsExtension : bool              { get; }
    Header      : TFunHeader        { get; }
    BuiltinKind : BuiltinMethodKind { get; }
    /// Obtain return type of typed method. If it is already inferred/fixed the value is one of FixedType variant options.
    ReturnType  : TypeVar           { get; }

    GetFreshType() : FixedType * list[TypeVar];
    GetHeader() : TFunHeader;
    new GetMemType() : FixedType.Fun;
    /// Obtains list of parameters of typed method
    GetParameters() : list[TParameter];
  }
} // ns
