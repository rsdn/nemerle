using Nemerle.Collections;
using Nemerle.IO;
using Nemerle.Utility;

using Nemerle.Compiler;
using Nemerle.Compiler.Util;

using System;
using System.Diagnostics;

using SCG   = System.Collections.Generic;

namespace Nemerle.Compiler
{
  public module LocationStack
  {
    [System.ThreadStatic] mutable _stack : SCG.List[Location];
    Stack : SCG.List[Location]
    {
      get
      {
        if (_stack != null) _stack
        else
        {
          _stack = SCG.List();
          _stack
        }
      }
    }
    
    [DebuggerNonUserCode]
    public Push(loc : Location) : void
    {
      Stack.Add(loc);
    }
    
    [DebuggerNonUserCode]
    public RemoveTop() : void
    {
      Stack.RemoveAt(Stack.Count - 1)
    }

    public Pop() : Location
    {
      def loc = Top();
      RemoveTop();
      loc
    }
    
    public Top() : Location
    {
      def s = LocationStack.Stack;
      if (s.Count == 0)
        Location.Default
      else
        s[s.Count - 1].AsGenerated()
    }
  }
}
