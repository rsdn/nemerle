using System;
using Nemerle;
using Nemerle.Collections;
using System.Console;

[Record]
public class TestAttribute : System.Attribute
{
  public i : int;
  public d : double;  // float or decimal
}

[Record]
public class Test2Attribute : System.Attribute
{
  public i : int;
  public d : float;  // float or decimal
}

[Test(1, 1.0)]
[Test(-1, 1.0)]
[Test(1, -1.0)]
[Test(-1, -1.0)]
[Test2(-1, -2.0f)]
public class SomeClass {}

module Test
{
  public Main() : void
  {
    def type = typeof(SomeClass);
    def args = type.GetCustomAttributes(false);

    def matching(v, n, n2)
    {
      match (v)
      {
        | TestAttribute(x1, x2)  => x1 == n && x2 == n2
        | Test2Attribute(x1, x2) => x1 == n && x2 == n2
        | _                      => false
      }
    }

    def check = [(1, 1.0),
                 (-1, 1.0),
                 (1, -1.0),
                 (-1, -1.0),
                 (-1, -2.0)];

    if (check.ForAll((x, x1) => args.Exists(matching(_, x, x1)))) WriteLine("OK") else WriteLine("Fail")
  }
}

/*
BEGIN-OUTPUT
OK
END-OUTPUT
*/
