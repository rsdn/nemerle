using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;
using Nemerle.Compiler;
using System.IO;

namespace Nemerle.Macro
{
  /// <summary>
  /// Description of Class1.
  /// </summary>
  public module SourceHelper
  {
    public MakeNamespaceForFolder(rootNs : string, path : string, basePath : string) : string
    {
      def relativePath = MakeRelativePath(path, basePath);
      def result  = rootNs + "." + relativePath.Replace('\\', '.');
      result
    }
    
    public MakeRelativePath(path : string, basePath : string) : string
    {
      def fullPath = Path.GetFullPath(path);
      def fullBasePath = Path.GetFullPath(basePath);
      if (fullPath.StartsWith(fullBasePath, StringComparison.InvariantCultureIgnoreCase))
        fullPath.Substring(fullBasePath.Length)
      else
        ""
    }

    public SubscribeSourceChangedWithCounter(manager : ManagerClass, fileIndex : int, handler : ISource * int -> void) : void
    {
      mutable counter = 0;
      manager.SubscribeSourceChanged(fileIndex, source =>
      {
        counter += 1;
        handler(source, counter);
      });
    }
  }
}
